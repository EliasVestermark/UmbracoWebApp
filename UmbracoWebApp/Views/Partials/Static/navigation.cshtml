@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@using Umbraco.Cms.Web.Common.PublishedModels;

@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{ 
    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray(); 
    var rootContent = UmbracoHelper.ContentAtRoot();
    var settings = rootContent?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var logo = settings?.Value<IPublishedContent>("logotype")?.Url() ?? "";
}

<div class="bottom">
    <div class="container">
        <a href="/"><img class="logo" src="@logo" alt="Onatrix logotype"></a>
        <div class="nav-bar">
            @if (selection?.Length > 0)
            {
                @foreach (var item in selection)
                {
                    <a class="@(item.IsAncestorOrSelf(Model) ? "current" : null)" href="@item.Url(PublishedUrlProvider)">@item.Name</a>
                }
            }
        </div>
        <div class="search">
            <i class="fa-solid fa-magnifying-glass"></i>
        </div>
    </div>      
</div>